"""
ass文件格式：
[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:04.88,0:00:07.94,Default,,0,0,0,,什么嘛　原来泽村同学的TOP ONE就这样？
Dialogue: 0,0:00:13.22,0:00:15.82,Default,,0,0,0,,真后悔自己居然看到第三话
Dialogue: 0,0:00:15.82,0:00:19.02,Default,,0,0,0,,怎么看都是神作吧

srt文件格式：
1
00:00:02.100 --> 00:00:05.880
那个，打扰了

2
00:00:07.733 --> 00:00:11.544
啊，打扰了

3
00:00:16.006 --> 00:00:19.646
嗯，我是漫咖应召店的咲音
"""

import os
import re
from tqdm import trange

REGEX_CONTENT = r"(\d{2}:\d{2}(.\d+)?)"
SCRIPT_INFO = '[Script Info]\n; Script generated by Aegisub 3.2.2\n; http://www.aegisub.org/\nTitle: Default Aegisub file\nScriptType: v4.00+\nWrapStyle: 0\nScaledBorderAndShadow: yes\nYCbCr Matrix: TV.709\nPlayResX: 1280\nPlayResY: 720\n'
AEGISUB_PROJECT_GARBAGE = '[Aegisub Project Garbage]\nLast Style Storage: Default\nVideo Zoom Percent: 1.000000\nScroll Position: 102\nActive Line: 200\nVideo Position: 17607\n'
STYLES = '[V4+ Styles]\nFormat: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\nStyle: Default,霞鹜文楷,40,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,2,5,10,10,20,1\n'
# STYLES = '[V4+ Styles]\nFormat: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\nStyle: Default,霞鹜文楷,40,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,2,2,10,10,20,1\n'
EVENTS = '[Events]'
FORMAT = 'Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text'


def read_srt_file(srt_path):
    subtitle = []
    f_srt = open(srt_path, 'r', encoding="utf-8")
    # 利用循环全部读出
    while 1 > 0:
        line = f_srt.readline()
        if line == '':
            break
        line = line.strip().replace('﻿', '')
        if len(line) == 0:
            continue
        subtitle.append(line)
    f_srt.close()
    return subtitle


def get_time_and_text(subtitle):
    time_text = []
    for i in range(0, len(subtitle)):
        line = subtitle[i]
        # 跳过内容为数字和文字的行
        content_match = re.search(REGEX_CONTENT, line)
        if content_match is None:
            continue
        next_line = subtitle[i + 1]
        time_list = line.split('-->')
        start_time_str = format_time_str_ass(time_list[0].strip())
        end_time_str = format_time_str_ass(time_list[1].strip())
        time_text.append([start_time_str, end_time_str, next_line])

    return time_text


def write_ass(ass_path, time_text):
    f_ass = open(ass_path, 'w', encoding="utf-8")

    # 1.写入文件头
    f_ass.write(SCRIPT_INFO + '\n')
    f_ass.write(AEGISUB_PROJECT_GARBAGE + '\n')
    # 2.字体样式
    f_ass.write(STYLES + '\n')
    # 3.写入Format
    f_ass.write(EVENTS + '\n')
    f_ass.write(FORMAT + '\n')

    # 4.将数组的每一项写出到正文中
    for i in range(0, len(time_text)):
        Start = time_text[i][0]
        End = time_text[i][1]
        Text = time_text[i][2]
        line = 'Dialogue: 0,' + Start + ',' + End + ',Default,,0,0,0,,' + Text
        f_ass.write(line + '\n')

    f_ass.close()


def format_time_str_ass(srt_time_str):
    """
    将SRT时间字符串（00:00:16.006、00:00.41）转换为ASS时间字符串（如"0:00:16.00"）。
    """
    srt_time_str = srt_time_str.replace(',','.')
    str = srt_time_str.split('.')[0]
    milliseconds = srt_time_str.split('.')[1]

    list = str.split(':')
    if len(list) == 2:  # 00:00.41
        hour = '00'
        minutes = list[0]
        seconds = list[1]
    elif len(list) == 3:  # 00:00:16.006
        hour = list[0]
        minutes = list[1]
        seconds = list[2]

    return hour[-1:] + ':' + minutes + ':' + seconds + '.' + milliseconds[:2]


def srt_to_ass(srt_path, ass_path):
    subtitle = read_srt_file(srt_path)
    time_text = get_time_and_text(subtitle)
    write_ass(ass_path, time_text)
    print("Done! You can find {}".format(ass_path))


def convert_srt_folder_to_ass(folder_path, output_folder_path):
    """
    将指定文件夹下的所有SRT文件转换为ASS文件。
    :param folder_path: 包含SRT文件的文件夹路径
    :param output_folder_path: 存放生成的ASS文件的文件夹路径
    """
    if not os.path.exists(output_folder_path):
        os.makedirs(output_folder_path)

    for filename in os.listdir(folder_path):
        if filename.endswith('.srt'):
            srt_path = os.path.join(folder_path, filename)
            ass_filename = filename.replace('.srt', '.ass')
            ass_path = os.path.join(output_folder_path, ass_filename)
            srt_to_ass(srt_path, ass_path)
            print(f"Converted {srt_path} to {ass_path}")
            #删除原来的srt文件
            os.remove(srt_path)


if __name__ == "__main__":
    folder_path = input('请输入包含SRT文件的文件夹完整路径：')
    output_folder_path = input('请输入存放生成的ASS文件的文件夹完整路径：')
    convert_srt_folder_to_ass(folder_path, output_folder_path)
