<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="generator" content="Asciidoctor 2.0.10">
    <title></title>
    <link rel="stylesheet" href="static/css/spring.css">
    <link rel="stylesheet" href="static/css/font-awesome.min.css">
</head>
<body id="spring-boot-reference-documentation" class="book toc2 toc-left">
<div id="header">
<h1>Reference Documentation</h1>
<div id="toc" class="toc2">
<div id="toctitle">Table of Contents</div>
<ul class="mobile-toc">
<li><a href="#legal">Legal</a></li>
<li><a href="#contents">目录</a>
<ul class="sectlevel2">
<li><a href="#1-Spring-Boot-Documentation">1 Spring Boot Documentation</a>

<ul class="sectlevel3">
<li><a href="#1.1-About-the-Documentation">1.1 About the Documentation</a>

</li>
<li><a href="#1.2-Getting-Help">1.2 Getting Help</a>

</li>
<li><a href="#1.3-Upgrading-from-an-Earlier-Version">1.3 Upgrading from an Earlier Version</a>

</li>
<li><a href="#1.4-First-Steps">1.4 First Steps</a>

</li>
<li><a href="#1.5-Working-with-Spring-Boot">1.5 Working with Spring Boot</a>

</li>
<li><a href="#1.6-Learning-about-Spring-Boot-Features">1.6 Learning about Spring Boot Features</a>

</li>
<li><a href="#1.7-Moving-to-Production">1.7 Moving to Production</a>

</li>
<li><a href="#1.8-Advanced-Topics">1.8 Advanced Topics</a>

</li>
</ul>
</li>
<li><a href="#2-Getting-Started">2 Getting Started</a>

<ul class="sectlevel3">
<li><a href="#2.1-Introducing-Spring-Boot">2.1 Introducing Spring Boot</a>

</li>
<li><a href="#2.2-System-Requirements">2.2 System Requirements</a>

<ul class="sectlevel4">
<li><a href="#2.2.1-Servlet-Containers">2.2.1 Servlet Containers</a>
</li>
</ul>
</li>
<li><a href="#2.3-Installing-Spring-Boot">2.3 Installing Spring Boot</a>

<ul class="sectlevel4">
<li><a href="#2.3.1-Installation-Instructions-for-the-Java-Developer">2.3.1 Installation Instructions for the Java Developer</a>
</li>
<li><a href="#2.3.2-Installing-the-Spring-Boot-CLI">2.3.2 Installing the Spring Boot CLI</a>
</li>
<li><a href="#2.3.3-Upgrading-from-an-Earlier-Version-of-Spring-Boot">2.3.3 Upgrading from an Earlier Version of Spring Boot</a>
</li>
</ul>
</li>
<li><a href="#2.4-Developing-Your-First-Spring-Boot-Application">2.4 Developing Your First Spring Boot Application</a>

<ul class="sectlevel4">
<li><a href="#2.4.1-Creating-the-POM">2.4.1 Creating the POM</a>
</li>
<li><a href="#2.4.2-Adding-Classpath-Dependencies">2.4.2 Adding Classpath Dependencies</a>
</li>
<li><a href="#2.4.3-Writing-the-Code">2.4.3 Writing the Code</a>
</li>
<li><a href="#2.4.4-Running-the-Example">2.4.4 Running the Example</a>
</li>
<li><a href="#2.4.5-Creating-an-Executable-Jar">2.4.5 Creating an Executable Jar</a>
</li>
</ul>
</li>
<li><a href="#2.5-What-to-Read-Next">2.5 What to Read Next</a>

</li>
</ul>
</li>
<li><a href="#3-Using-Spring-Boot">3 Using Spring Boot</a>

<ul class="sectlevel3">
<li><a href="#3.1-Build-Systems">3.1 Build Systems</a>

<ul class="sectlevel4">
<li><a href="#3.1.1-Dependency-Management">3.1.1 Dependency Management</a>
</li>
<li><a href="#3.1.2-Maven">3.1.2 Maven</a>
</li>
<li><a href="#3.1.3-Gradle">3.1.3 Gradle</a>
</li>
<li><a href="#3.1.4-Ant">3.1.4 Ant</a>
</li>
<li><a href="#3.1.5-Starters">3.1.5 Starters</a>
</li>
</ul>
</ul>
</li>
</ul>
</li>
</ul><!--<ul class="mobile-toc">-->
<div id="tocbot" class="js-toc desktop-toc">
<ol class="toc-list ">
<li class="toc-list-item is-active-li"><a href="#legal" class="toc-link node-name--H2  is-active-link">Legal</a></li>
<li class="toc-list-item"><a href="#contents" class="toc-link node-name--H2 ">目录</a>
<ol class="toc-list  is-collapsible is-collapsed">
<li class="toc-list-item"><a href="#1-Spring-Boot-Documentation" class="toc-link node-name--H3 ">1 Spring Boot Documentation</a>

<ol class="toc-list  is-collapsible is-collapsed">
<li class="toc-list-item"><a href="#1.1-About-the-Documentation" class="toc-link node-name--H4 ">1.1 About the Documentation</a>

</li>
<li class="toc-list-item"><a href="#1.2-Getting-Help" class="toc-link node-name--H4 ">1.2 Getting Help</a>

</li>
<li class="toc-list-item"><a href="#1.3-Upgrading-from-an-Earlier-Version" class="toc-link node-name--H4 ">1.3 Upgrading from an Earlier Version</a>

</li>
<li class="toc-list-item"><a href="#1.4-First-Steps" class="toc-link node-name--H4 ">1.4 First Steps</a>

</li>
<li class="toc-list-item"><a href="#1.5-Working-with-Spring-Boot" class="toc-link node-name--H4 ">1.5 Working with Spring Boot</a>

</li>
<li class="toc-list-item"><a href="#1.6-Learning-about-Spring-Boot-Features" class="toc-link node-name--H4 ">1.6 Learning about Spring Boot Features</a>

</li>
<li class="toc-list-item"><a href="#1.7-Moving-to-Production" class="toc-link node-name--H4 ">1.7 Moving to Production</a>

</li>
<li class="toc-list-item"><a href="#1.8-Advanced-Topics" class="toc-link node-name--H4 ">1.8 Advanced Topics</a>

</li>
</ol>
</li>
<li class="toc-list-item"><a href="#2-Getting-Started" class="toc-link node-name--H3 ">2 Getting Started</a>

<ol class="toc-list  is-collapsible is-collapsed">
<li class="toc-list-item"><a href="#2.1-Introducing-Spring-Boot" class="toc-link node-name--H4 ">2.1 Introducing Spring Boot</a>

</li>
<li class="toc-list-item"><a href="#2.2-System-Requirements" class="toc-link node-name--H4 ">2.2 System Requirements</a>

<ol class="toc-list  is-collapsible is-collapsed">
<li class="toc-list-item"><a href="#2.2.1-Servlet-Containers" class="toc-link node-name--H5 ">2.2.1 Servlet Containers</a>
</li>
</ol>
</li>
<li class="toc-list-item"><a href="#2.3-Installing-Spring-Boot" class="toc-link node-name--H4 ">2.3 Installing Spring Boot</a>

<ol class="toc-list  is-collapsible is-collapsed">
<li class="toc-list-item"><a href="#2.3.1-Installation-Instructions-for-the-Java-Developer" class="toc-link node-name--H5 ">2.3.1 Installation Instructions for the Java Developer</a>
</li>
<li class="toc-list-item"><a href="#2.3.2-Installing-the-Spring-Boot-CLI" class="toc-link node-name--H5 ">2.3.2 Installing the Spring Boot CLI</a>
</li>
<li class="toc-list-item"><a href="#2.3.3-Upgrading-from-an-Earlier-Version-of-Spring-Boot" class="toc-link node-name--H5 ">2.3.3 Upgrading from an Earlier Version of Spring Boot</a>
</li>
</ol>
</li>
<li class="toc-list-item"><a href="#2.4-Developing-Your-First-Spring-Boot-Application" class="toc-link node-name--H4 ">2.4 Developing Your First Spring Boot Application</a>

<ol class="toc-list  is-collapsible is-collapsed">
<li class="toc-list-item"><a href="#2.4.1-Creating-the-POM" class="toc-link node-name--H5 ">2.4.1 Creating the POM</a>
</li>
<li class="toc-list-item"><a href="#2.4.2-Adding-Classpath-Dependencies" class="toc-link node-name--H5 ">2.4.2 Adding Classpath Dependencies</a>
</li>
<li class="toc-list-item"><a href="#2.4.3-Writing-the-Code" class="toc-link node-name--H5 ">2.4.3 Writing the Code</a>
</li>
<li class="toc-list-item"><a href="#2.4.4-Running-the-Example" class="toc-link node-name--H5 ">2.4.4 Running the Example</a>
</li>
<li class="toc-list-item"><a href="#2.4.5-Creating-an-Executable-Jar" class="toc-link node-name--H5 ">2.4.5 Creating an Executable Jar</a>
</li>
</ol>
</li>
<li class="toc-list-item"><a href="#2.5-What-to-Read-Next" class="toc-link node-name--H4 ">2.5 What to Read Next</a>

</li>
</ol>
</li>
<li class="toc-list-item"><a href="#3-Using-Spring-Boot" class="toc-link node-name--H3 ">3 Using Spring Boot</a>

<ol class="toc-list  is-collapsible is-collapsed">
<li class="toc-list-item"><a href="#3.1-Build-Systems" class="toc-link node-name--H4 ">3.1 Build Systems</a>

<ol class="toc-list  is-collapsible is-collapsed">
<li class="toc-list-item"><a href="#3.1.1-Dependency-Management" class="toc-link node-name--H5 ">3.1.1 Dependency Management</a>
</li>
<li class="toc-list-item"><a href="#3.1.2-Maven" class="toc-link node-name--H5 ">3.1.2 Maven</a>
</li>
<li class="toc-list-item"><a href="#3.1.3-Gradle" class="toc-link node-name--H5 ">3.1.3 Gradle</a>
</li>
<li class="toc-list-item"><a href="#3.1.4-Ant" class="toc-link node-name--H5 ">3.1.4 Ant</a>
</li>
<li class="toc-list-item"><a href="#3.1.5-Starters" class="toc-link node-name--H5 ">3.1.5 Starters</a>
</li>
</ol>
</li>
</ol>
</li>
</ol>
</ol>
</div><!--<div id="tocbot" class="js-toc desktop-toc">-->
</div><!--<div id="toc" class="toc2">-->
</div><!--<div id="header.txt">-->
<div id="content">
<div class="sect1">
<h2 id="legal"><a class="anchor" href="#legal"></a>Legal</h2>
<div class="sectionbody">
    <div class="paragraph">
        <p>2.3.6.RELEASE</p>
    </div>
    <div class="paragraph">
        <p>Copyright © 2012-2020</p>
    </div>
</div>
</div>
<div class="sect1">
<h2 id="contents"><a class="anchor" href="#contents"></a>目录</h2>
<div class="admonitionblock tip">
    <table>
        <tbody>
        <tr>
            <td class="icon">
                <i class="fa icon-tip" title="Tip"></i>
            </td>
            <td class="content">
<a href="#1-Spring-Boot-Documentation">1 Spring Boot Documentation</a><br>
<a href="#1.1-About-the-Documentation">&nbsp;&nbsp;&nbsp;&nbsp;1.1 About the Documentation</a><br>
<a href="#1.2-Getting-Help">&nbsp;&nbsp;&nbsp;&nbsp;1.2 Getting Help</a><br>
<a href="#1.3-Upgrading-from-an-Earlier-Version">&nbsp;&nbsp;&nbsp;&nbsp;1.3 Upgrading from an Earlier Version</a><br>
<a href="#1.4-First-Steps">&nbsp;&nbsp;&nbsp;&nbsp;1.4 First Steps</a><br>
<a href="#1.5-Working-with-Spring-Boot">&nbsp;&nbsp;&nbsp;&nbsp;1.5 Working with Spring Boot</a><br>
<a href="#1.6-Learning-about-Spring-Boot-Features">&nbsp;&nbsp;&nbsp;&nbsp;1.6 Learning about Spring Boot Features</a><br>
<a href="#1.7-Moving-to-Production">&nbsp;&nbsp;&nbsp;&nbsp;1.7 Moving to Production</a><br>
<a href="#1.8-Advanced-Topics">&nbsp;&nbsp;&nbsp;&nbsp;1.8 Advanced Topics</a><br>
<a href="#2-Getting-Started">2 Getting Started</a><br>
<a href="#2.1-Introducing-Spring-Boot">&nbsp;&nbsp;&nbsp;&nbsp;2.1 Introducing Spring Boot</a><br>
<a href="#2.2-System-Requirements">&nbsp;&nbsp;&nbsp;&nbsp;2.2 System Requirements</a><br>
<a href="#2.2.1-Servlet-Containers">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.2.1 Servlet Containers</a><br>
<a href="#2.3-Installing-Spring-Boot">&nbsp;&nbsp;&nbsp;&nbsp;2.3 Installing Spring Boot</a><br>
<a href="#2.3.1-Installation-Instructions-for-the-Java-Developer">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.3.1 Installation Instructions for the Java Developer</a><br>
<a href="#2.3.2-Installing-the-Spring-Boot-CLI">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.3.2 Installing the Spring Boot CLI</a><br>
<a href="#2.3.3-Upgrading-from-an-Earlier-Version-of-Spring-Boot">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.3.3 Upgrading from an Earlier Version of Spring Boot</a><br>
<a href="#2.4-Developing-Your-First-Spring-Boot-Application">&nbsp;&nbsp;&nbsp;&nbsp;2.4 Developing Your First Spring Boot Application</a><br>
<a href="#2.4.1-Creating-the-POM">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.4.1 Creating the POM</a><br>
<a href="#2.4.2-Adding-Classpath-Dependencies">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.4.2 Adding Classpath Dependencies</a><br>
<a href="#2.4.3-Writing-the-Code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.4.3 Writing the Code</a><br>
<a href="#2.4.4-Running-the-Example">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.4.4 Running the Example</a><br>
<a href="#2.4.5-Creating-an-Executable-Jar">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.4.5 Creating an Executable Jar</a><br>
<a href="#2.5-What-to-Read-Next">&nbsp;&nbsp;&nbsp;&nbsp;2.5 What to Read Next</a><br>
<a href="#3-Using-Spring-Boot">3 Using Spring Boot</a><br>
<a href="#3.1-Build-Systems">&nbsp;&nbsp;&nbsp;&nbsp;3.1 Build Systems</a><br>
<a href="#3.1.1-Dependency-Management">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.1.1 Dependency Management</a><br>
<a href="#3.1.2-Maven">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.1.2 Maven</a><br>
<a href="#3.1.3-Gradle">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.1.3 Gradle</a><br>
<a href="#3.1.4-Ant">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.1.4 Ant</a><br>
<a href="#3.1.5-Starters">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.1.5 Starters</a><br>
            </td>
        </tr>
        </tbody>
    </table>
</div>
<div class="sectionbody">
<div class="sect2">
<h3 id="1-Spring-Boot-Documentation"><a class="anchor" href="#1-Spring-Boot-Documentation"></a>1 Spring Boot Documentation</h3>
<div class="paragraph"><p>This section provides a brief overview of Spring Boot reference documentation. It serves as a map for the rest of the document.</p></div>
<div class="paragraph"><p></p></div>
<div class="sect3">
<h4 id="1.1-About-the-Documentation"><a class="anchor" href="#1.1-About-the-Documentation"></a>1.1 About the Documentation</h4>
<div class="paragraph"><p>The Spring Boot reference guide is available as:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Multi-page HTML</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Single page HTML</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>PDF</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>The latest copy is available at docs.spring.io/spring-boot/docs/current/reference/.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect3">
<h4 id="1.2-Getting-Help"><a class="anchor" href="#1.2-Getting-Help"></a>1.2 Getting Help</h4>
<div class="paragraph"><p>If you have trouble with Spring Boot, we would like to help.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Try the How-to documents. They provide solutions to the most common questions.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Learn the Spring basics. Spring Boot builds on many other Spring projects. Check the spring.io web-site for a wealth of reference documentation. If you are starting out with Spring, try one of the guides.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Ask a question. We monitor stackoverflow.com for questions tagged with spring-boot.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Report bugs with Spring Boot at github.com/spring-projects/spring-boot/issues.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>All of Spring Boot is open source, including the documentation. If you find problems with the docs or if you want to improve them, please get involved.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><img src="img/2327386519288060.png"></p></div>
<div class="paragraph"><p><img src="img/2327386519288060.png"></p></div>
<div class="paragraph"><p><img src="img/2327386519288060.png"></p></div>
<div class="paragraph"><p><img src="img/2327386519288060.png"></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect3">
<h4 id="1.3-Upgrading-from-an-Earlier-Version"><a class="anchor" href="#1.3-Upgrading-from-an-Earlier-Version"></a>1.3 Upgrading from an Earlier Version</h4>
<div class="paragraph"><p>Instructions for how to upgrade from earlier versions of Spring Boot are provided on the project wiki. Follow the links in the in the release notes section to find the version that you want to upgrade to.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Upgrading instructions are always the first item in the release notes. If you are more than one release behind, please make sure that you also review the release notes of the versions that you jumped.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>You should always ensure that you are running a supported version of Spring Boot.</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect3">
<h4 id="1.4-First-Steps"><a class="anchor" href="#1.4-First-Steps"></a>1.4 First Steps</h4>
<div class="paragraph"><p>If you are getting started with Spring Boot or 'Spring' in general, start with the following topics:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>From scratch: Overview | Requirements | Installation</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Tutorial: Part 1 | Part 2</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Running your example: Part 1 | Part 2</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect3">
<h4 id="1.5-Working-with-Spring-Boot"><a class="anchor" href="#1.5-Working-with-Spring-Boot"></a>1.5 Working with Spring Boot</h4>
<div class="paragraph"><p>Ready to actually start using Spring Boot? We have you covered:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Build systems: Maven | Gradle | Ant | Starters</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Best practices: Code Structure | @Configuration | @EnableAutoConfiguration | Beans and Dependency Injection</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Running your code: IDE | Packaged | Maven | Gradle</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Packaging your app: Production jars</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Spring Boot CLI: Using the CLI</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect3">
<h4 id="1.6-Learning-about-Spring-Boot-Features"><a class="anchor" href="#1.6-Learning-about-Spring-Boot-Features"></a>1.6 Learning about Spring Boot Features</h4>
<div class="paragraph"><p>Need more details about Spring Boot’s core features? The following content is for you:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Core Features: SpringApplication | External Configuration | Profiles | Logging</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Web Applications: MVC | Embedded Containers</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Working with data: SQL | NO-SQL</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Messaging: Overview | JMS</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Testing: Overview | Boot Applications | Utils</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Extending: Auto-configuration | @Conditions</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect3">
<h4 id="1.7-Moving-to-Production"><a class="anchor" href="#1.7-Moving-to-Production"></a>1.7 Moving to Production</h4>
<div class="paragraph"><p>When you are ready to push your Spring Boot application to production, we have some tricks that you might like:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Management endpoints: Overview</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Connection options: HTTP | JMX</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Monitoring: Metrics | Auditing | HTTP Tracing | Process</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect3">
<h4 id="1.8-Advanced-Topics"><a class="anchor" href="#1.8-Advanced-Topics"></a>1.8 Advanced Topics</h4>
<div class="paragraph"><p>Finally, we have a few topics for more advanced users:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Spring Boot Applications Deployment: Cloud Deployment | OS Service</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Build tool plugins: Maven | Gradle</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Appendix: Application Properties | Configuration Metadata | Auto-configuration Classes | Test Auto-configuration Annotations | Executable Jars | Dependency Versions</p></div>
<div class="paragraph"><p></p></div>
</div>
</div>
<div class="sect2">
<h3 id="2-Getting-Started"><a class="anchor" href="#2-Getting-Started"></a>2 Getting Started</h3>
<div class="paragraph"><p>If you are getting started with Spring Boot, or “Spring” in general, start by reading this section. It answers the basic “what?”, “how?” and “why?” questions. It includes an introduction to Spring Boot, along with installation instructions. We then walk you through building your first Spring Boot application, discussing some core principles as we go.</p></div>
<div class="paragraph"><p></p></div>
<div class="sect3">
<h4 id="2.1-Introducing-Spring-Boot"><a class="anchor" href="#2.1-Introducing-Spring-Boot"></a>2.1 Introducing Spring Boot</h4>
<div class="paragraph"><p>Spring Boot helps you to create stand-alone, production-grade Spring-based Applications that you can run. We take an opinionated view of the Spring platform and third-party libraries, so that you can get started with minimum fuss. Most Spring Boot applications need very little Spring configuration.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>You can use Spring Boot to create Java applications that can be started by using java -jar or more traditional war deployments. We also provide a command line tool that runs “spring scripts”.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Our primary goals are:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Provide a radically faster and widely accessible getting-started experience for all Spring development.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Be opinionated out of the box but get out of the way quickly as requirements start to diverge from the defaults.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Provide a range of non-functional features that are common to large classes of projects (such as embedded servers, security, metrics, health checks, and externalized configuration).</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Absolutely no code generation and no requirement for XML configuration.</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect3">
<h4 id="2.2-System-Requirements"><a class="anchor" href="#2.2-System-Requirements"></a>2.2 System Requirements</h4>
<div class="paragraph"><p>Spring Boot 2.3.6.RELEASE requires Java 8 and is compatible up to Java 15 (included). Spring Framework 5.2.11.RELEASE or above is also required.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Explicit build support is provided for the following build tools:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Build Tool  Version</p></div>
<div class="paragraph"><p>Maven</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>3.3+</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Gradle</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p></p></div>
<div class="sect4">
<h5 id="2.2.1-Servlet-Containers"><a class="anchor" href="#2.2.1-Servlet-Containers"></a>2.2.1 Servlet Containers</h5>
<div class="paragraph"><p>Spring Boot supports the following embedded servlet containers:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Name    Servlet Version</p></div>
<div class="paragraph"><p>Tomcat 9.0</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>4.0</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Jetty 9.4</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>3.1</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Undertow 2.0</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>4.0</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>You can also deploy Spring Boot applications to any Servlet 3.1+ compatible container.</p></div>
<div class="paragraph"><p></p></div>
</div>
</div>
<div class="sect3">
<h4 id="2.3-Installing-Spring-Boot"><a class="anchor" href="#2.3-Installing-Spring-Boot"></a>2.3 Installing Spring Boot</h4>
<div class="paragraph"><p>Spring Boot can be used with “classic” Java development tools or installed as a command line tool. Either way, you need Java SDK v1.8 or higher. Before you begin, you should check your current Java installation by using the following command:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ java -version</p></div>
<div class="paragraph"><p>If you are new to Java development or if you want to experiment with Spring Boot, you might want to try the Spring Boot CLI (Command Line Interface) first. Otherwise, read on for “classic” installation instructions.</p></div>
<div class="paragraph"><p></p></div>
<div class="sect4">
<h5 id="2.3.1-Installation-Instructions-for-the-Java-Developer"><a class="anchor" href="#2.3.1-Installation-Instructions-for-the-Java-Developer"></a>2.3.1 Installation Instructions for the Java Developer</h5>
<div class="paragraph"><p>You can use Spring Boot in the same way as any standard Java library. To do so, include the appropriate spring-boot-*.jar files on your classpath. Spring Boot does not require any special tools integration, so you can use any IDE or text editor. Also, there is nothing special about a Spring Boot application, so you can run and debug a Spring Boot application as you would any other Java program.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Although you could copy Spring Boot jars, we generally recommend that you use a build tool that supports dependency management (such as Maven or Gradle).</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Maven Installation</p></div>
<div class="paragraph"><p>Spring Boot is compatible with Apache Maven 3.3 or above. If you do not already have Maven installed, you can follow the instructions at maven.apache.org.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>On many operating systems, Maven can be installed with a package manager. If you use OSX Homebrew, try brew install maven. Ubuntu users can run sudo apt-get install maven. Windows users with Chocolatey can run choco install maven from an elevated (administrator) prompt.</p></div>
<div class="paragraph"><p>Spring Boot dependencies use the org.springframework.boot groupId. Typically, your Maven POM file inherits from the spring-boot-starter-parent project and declares dependencies to one or more “Starters”. Spring Boot also provides an optional Maven plugin to create executable jars.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>More details on getting started with Spring Boot and Maven can be found in the Getting Started section of the Maven plugin’s reference guide.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Gradle Installation</p></div>
<div class="paragraph"><p>Spring Boot is compatible with Gradle 6 (6.3 or later). Gradle 5.6.x is also supported but this support is deprecated and will be removed in a future release. If you do not already have Gradle installed, you can follow the instructions at gradle.org.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Spring Boot dependencies can be declared by using the org.springframework.boot group. Typically, your project declares dependencies to one or more “Starters”. Spring Boot provides a useful Gradle plugin that can be used to simplify dependency declarations and to create executable jars.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Gradle Wrapper</p></div>
<div class="paragraph"><p>The Gradle Wrapper provides a nice way of “obtaining” Gradle when you need to build a project. It is a small script and library that you commit alongside your code to bootstrap the build process. See docs.gradle.org/current/userguide/gradle_wrapper.html for details.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>More details on getting started with Spring Boot and Gradle can be found in the Getting Started section of the Gradle plugin’s reference guide.</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect4">
<h5 id="2.3.2-Installing-the-Spring-Boot-CLI"><a class="anchor" href="#2.3.2-Installing-the-Spring-Boot-CLI"></a>2.3.2 Installing the Spring Boot CLI</h5>
<div class="paragraph"><p>The Spring Boot CLI (Command Line Interface) is a command line tool that you can use to quickly prototype with Spring. It lets you run Groovy scripts, which means that you have a familiar Java-like syntax without so much boilerplate code.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>You do not need to use the CLI to work with Spring Boot, but it is definitely the quickest way to get a Spring application off the ground.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Manual Installation</p></div>
<div class="paragraph"><p>You can download the Spring CLI distribution from the Spring software repository:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>spring-boot-cli-2.3.6.RELEASE-bin.zip</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>spring-boot-cli-2.3.6.RELEASE-bin.tar.gz</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Cutting edge snapshot distributions are also available.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Once downloaded, follow the INSTALL.txt instructions from the unpacked archive. In summary, there is a spring script (spring.bat for Windows) in a bin/ directory in the .zip file. Alternatively, you can use java -jar with the .jar file (the script helps you to be sure that the classpath is set correctly).</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Installation with SDKMAN!</p></div>
<div class="paragraph"><p>SDKMAN! (The Software Development Kit Manager) can be used for managing multiple versions of various binary SDKs, including Groovy and the Spring Boot CLI. Get SDKMAN! from sdkman.io and install Spring Boot by using the following commands:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ sdk install springboot</p></div>
<div class="paragraph"><p>$ spring --version</p></div>
<div class="paragraph"><p>Spring Boot v2.3.6.RELEASE</p></div>
<div class="paragraph"><p>If you develop features for the CLI and want access to the version you built, use the following commands:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ sdk install springboot dev /path/to/spring-boot/spring-boot-cli/target/spring-boot-cli-2.3.6.RELEASE-bin/spring-2.3.6.RELEASE/</p></div>
<div class="paragraph"><p>$ sdk default springboot dev</p></div>
<div class="paragraph"><p>$ spring --version</p></div>
<div class="paragraph"><p>Spring CLI v2.3.6.RELEASE</p></div>
<div class="paragraph"><p>The preceding instructions install a local instance of spring called the dev instance. It points at your target build location, so every time you rebuild Spring Boot, spring is up-to-date.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>You can see it by running the following command:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ sdk ls springboot</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>================================================================================</p></div>
<div class="paragraph"><p>Available Springboot Versions</p></div>
<div class="paragraph"><p>================================================================================</p></div>
<div class="paragraph"><p>> + dev</p></div>
<div class="paragraph"><p>* 2.3.6.RELEASE</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>================================================================================</p></div>
<div class="paragraph"><p>+ - local version</p></div>
<div class="paragraph"><p>* - installed</p></div>
<div class="paragraph"><p>> - currently in use</p></div>
<div class="paragraph"><p>================================================================================</p></div>
<div class="paragraph"><p>OSX Homebrew Installation</p></div>
<div class="paragraph"><p>If you are on a Mac and use Homebrew, you can install the Spring Boot CLI by using the following commands:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ brew tap pivotal/tap</p></div>
<div class="paragraph"><p>$ brew install springboot</p></div>
<div class="paragraph"><p>Homebrew installs spring to /usr/local/bin.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>If you do not see the formula, your installation of brew might be out-of-date. In that case, run brew update and try again.</p></div>
<div class="paragraph"><p>MacPorts Installation</p></div>
<div class="paragraph"><p>If you are on a Mac and use MacPorts, you can install the Spring Boot CLI by using the following command:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ sudo port install spring-boot-cli</p></div>
<div class="paragraph"><p>Command-line Completion</p></div>
<div class="paragraph"><p>The Spring Boot CLI includes scripts that provide command completion for the BASH and zsh shells. You can source the script (also named spring) in any shell or put it in your personal or system-wide bash completion initialization. On a Debian system, the system-wide scripts are in /shell-completion/bash and all scripts in that directory are executed when a new shell starts. For example, to run the script manually if you have installed by using SDKMAN!, use the following commands:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ . ~/.sdkman/candidates/springboot/current/shell-completion/bash/spring</p></div>
<div class="paragraph"><p>$ spring <HIT TAB HERE></p></div>
<div class="paragraph"><p>grab  help  jar  run  test  version</p></div>
<div class="paragraph"><p>If you install the Spring Boot CLI by using Homebrew or MacPorts, the command-line completion scripts are automatically registered with your shell.</p></div>
<div class="paragraph"><p>Windows Scoop Installation</p></div>
<div class="paragraph"><p>If you are on a Windows and use Scoop, you can install the Spring Boot CLI by using the following commands:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>> scoop bucket add extras</p></div>
<div class="paragraph"><p>> scoop install springboot</p></div>
<div class="paragraph"><p>Scoop installs spring to ~/scoop/apps/springboot/current/bin.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>If you do not see the app manifest, your installation of scoop might be out-of-date. In that case, run scoop update and try again.</p></div>
<div class="paragraph"><p>Quick-start Spring CLI Example</p></div>
<div class="paragraph"><p>You can use the following web application to test your installation. To start, create a file called app.groovy, as follows:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>@RestController</p></div>
<div class="paragraph"><p>class ThisWillActuallyRun {</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>@RequestMapping("/")</p></div>
<div class="paragraph"><p>String home() {</p></div>
<div class="paragraph"><p>"Hello World!"</p></div>
<div class="paragraph"><p>}</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>}</p></div>
<div class="paragraph"><p>Then run it from a shell, as follows:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ spring run app.groovy</p></div>
<div class="paragraph"><p>The first run of your application is slow, as dependencies are downloaded. Subsequent runs are much quicker.</p></div>
<div class="paragraph"><p>Open localhost:8080 in your favorite web browser. You should see the following output:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Hello World!</p></div>
</div>
<div class="sect4">
<h5 id="2.3.3-Upgrading-from-an-Earlier-Version-of-Spring-Boot"><a class="anchor" href="#2.3.3-Upgrading-from-an-Earlier-Version-of-Spring-Boot"></a>2.3.3 Upgrading from an Earlier Version of Spring Boot</h5>
<div class="paragraph"><p>If you are upgrading from the 1.x release of Spring Boot, check the “migration guide” on the project wiki that provides detailed upgrade instructions. Check also the “release notes” for a list of “new and noteworthy” features for each release.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>When upgrading to a new feature release, some properties may have been renamed or removed. Spring Boot provides a way to analyze your application’s environment and print diagnostics at startup, but also temporarily migrate properties at runtime for you. To enable that feature, add the following dependency to your project:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><dependency></p></div>
<div class="paragraph"><p><groupId>org.springframework.boot</groupId></p></div>
<div class="paragraph"><p><artifactId>spring-boot-properties-migrator</artifactId></p></div>
<div class="paragraph"><p><scope>runtime</scope></p></div>
<div class="paragraph"><p></dependency></p></div>
<div class="paragraph"><p>Properties that are added late to the environment, such as when using @PropertySource, will not be taken into account.</p></div>
<div class="paragraph"><p>Once you’re done with the migration, please make sure to remove this module from your project’s dependencies.</p></div>
<div class="paragraph"><p>To upgrade an existing CLI installation, use the appropriate package manager command (for example, brew upgrade). If you manually installed the CLI, follow the standard instructions, remembering to update your PATH environment variable to remove any older references.</p></div>
<div class="paragraph"><p></p></div>
</div>
</div>
<div class="sect3">
<h4 id="2.4-Developing-Your-First-Spring-Boot-Application"><a class="anchor" href="#2.4-Developing-Your-First-Spring-Boot-Application"></a>2.4 Developing Your First Spring Boot Application</h4>
<div class="paragraph"><p>This section describes how to develop a small “Hello World!” web application that highlights some of Spring Boot’s key features. We use Maven to build this project, since most IDEs support it.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>The spring.io web site contains many “Getting Started” guides that use Spring Boot. If you need to solve a specific problem, check there first.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>You can shortcut the steps below by going to start.spring.io and choosing the "Web" starter from the dependencies searcher. Doing so generates a new project structure so that you can start coding right away. Check the Spring Initializr documentation for more details.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Before we begin, open a terminal and run the following commands to ensure that you have valid versions of Java and Maven installed:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ java -version</p></div>
<div class="paragraph"><p>java version "1.8.0_102"</p></div>
<div class="paragraph"><p>Java(TM) SE Runtime Environment (build 1.8.0_102-b14)</p></div>
<div class="paragraph"><p>Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)</p></div>
<div class="paragraph"><p>$ mvn -v</p></div>
<div class="paragraph"><p>Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T14:33:14-04:00)</p></div>
<div class="paragraph"><p>Maven home: /usr/local/Cellar/maven/3.3.9/libexec</p></div>
<div class="paragraph"><p>Java version: 1.8.0_102, vendor: Oracle Corporation</p></div>
<div class="paragraph"><p>This sample needs to be created in its own directory. Subsequent instructions assume that you have created a suitable directory and that it is your current directory.</p></div>
<div class="sect4">
<h5 id="2.4.1-Creating-the-POM"><a class="anchor" href="#2.4.1-Creating-the-POM"></a>2.4.1 Creating the POM</h5>
<div class="paragraph"><p>We need to start by creating a Maven pom.xml file. The pom.xml is the recipe that is used to build your project. Open your favorite text editor and add the following:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><?xml version="1.0" encoding="UTF-8"?></p></div>
<div class="paragraph"><p><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</p></div>
<div class="paragraph"><p>xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"></p></div>
<div class="paragraph"><p><modelVersion>4.0.0</modelVersion></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><groupId>com.example</groupId></p></div>
<div class="paragraph"><p><artifactId>myproject</artifactId></p></div>
<div class="paragraph"><p><version>0.0.1-SNAPSHOT</version></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><parent></p></div>
<div class="paragraph"><p><groupId>org.springframework.boot</groupId></p></div>
<div class="paragraph"><p><artifactId>spring-boot-starter-parent</artifactId></p></div>
<div class="paragraph"><p><version>2.3.6.RELEASE</version></p></div>
<div class="paragraph"><p></parent></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><description/></p></div>
<div class="paragraph"><p><developers></p></div>
<div class="paragraph"><p><developer/></p></div>
<div class="paragraph"><p></developers></p></div>
<div class="paragraph"><p><licenses></p></div>
<div class="paragraph"><p><license/></p></div>
<div class="paragraph"><p></licenses></p></div>
<div class="paragraph"><p><scm></p></div>
<div class="paragraph"><p><url/></p></div>
<div class="paragraph"><p></scm></p></div>
<div class="paragraph"><p><url/></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><!-- Additional lines to be added here... --></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p></project></p></div>
<div class="paragraph"><p>The preceding listing should give you a working build. You can test it by running mvn package (for now, you can ignore the “jar will be empty - no content was marked for inclusion!” warning).</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>At this point, you could import the project into an IDE (most modern Java IDEs include built-in support for Maven). For simplicity, we continue to use a plain text editor for this example.</p></div>
</div>
<div class="sect4">
<h5 id="2.4.2-Adding-Classpath-Dependencies"><a class="anchor" href="#2.4.2-Adding-Classpath-Dependencies"></a>2.4.2 Adding Classpath Dependencies</h5>
<div class="paragraph"><p>Spring Boot provides a number of “Starters” that let you add jars to your classpath. Our applications for smoke tests use the spring-boot-starter-parent in the parent section of the POM. The spring-boot-starter-parent is a special starter that provides useful Maven defaults. It also provides a dependency-management section so that you can omit version tags for “blessed” dependencies.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Other “Starters” provide dependencies that you are likely to need when developing a specific type of application. Since we are developing a web application, we add a spring-boot-starter-web dependency. Before that, we can look at what we currently have by running the following command:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ mvn dependency:tree</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>[INFO] com.example:myproject:jar:0.0.1-SNAPSHOT</p></div>
<div class="paragraph"><p>The mvn dependency:tree command prints a tree representation of your project dependencies. You can see that spring-boot-starter-parent provides no dependencies by itself. To add the necessary dependencies, edit your pom.xml and add the spring-boot-starter-web dependency immediately below the parent section:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><dependencies></p></div>
<div class="paragraph"><p><dependency></p></div>
<div class="paragraph"><p><groupId>org.springframework.boot</groupId></p></div>
<div class="paragraph"><p><artifactId>spring-boot-starter-web</artifactId></p></div>
<div class="paragraph"><p></dependency></p></div>
<div class="paragraph"><p></dependencies></p></div>
<div class="paragraph"><p>If you run mvn dependency:tree again, you see that there are now a number of additional dependencies, including the Tomcat web server and Spring Boot itself.</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect4">
<h5 id="2.4.3-Writing-the-Code"><a class="anchor" href="#2.4.3-Writing-the-Code"></a>2.4.3 Writing the Code</h5>
<div class="paragraph"><p>To finish our application, we need to create a single Java file. By default, Maven compiles sources from src/main/java, so you need to create that directory structure and then add a file named src/main/java/Example.java to contain the following code:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>import org.springframework.boot.*;</p></div>
<div class="paragraph"><p>import org.springframework.boot.autoconfigure.*;</p></div>
<div class="paragraph"><p>import org.springframework.web.bind.annotation.*;</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>@RestController</p></div>
<div class="paragraph"><p>@EnableAutoConfiguration</p></div>
<div class="paragraph"><p>public class Example {</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>@RequestMapping("/")</p></div>
<div class="paragraph"><p>String home() {</p></div>
<div class="paragraph"><p>return "Hello World!";</p></div>
<div class="paragraph"><p>}</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>public static void main(String[] args) {</p></div>
<div class="paragraph"><p>SpringApplication.run(Example.class, args);</p></div>
<div class="paragraph"><p>}</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>}</p></div>
<div class="paragraph"><p>Although there is not much code here, quite a lot is going on. We step through the important parts in the next few sections.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>The @RestController and @RequestMapping Annotations</p></div>
<div class="paragraph"><p>The first annotation on our Example class is @RestController. This is known as a stereotype annotation. It provides hints for people reading the code and for Spring that the class plays a specific role. In this case, our class is a web @Controller, so Spring considers it when handling incoming web requests.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>The @RequestMapping annotation provides “routing” information. It tells Spring that any HTTP request with the / path should be mapped to the home method. The @RestController annotation tells Spring to render the resulting string directly back to the caller.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>The @RestController and @RequestMapping annotations are Spring MVC annotations (they are not specific to Spring Boot). See the MVC section in the Spring Reference Documentation for more details.</p></div>
<div class="paragraph"><p>The @EnableAutoConfiguration Annotation</p></div>
<div class="paragraph"><p>The second class-level annotation is @EnableAutoConfiguration. This annotation tells Spring Boot to “guess” how you want to configure Spring, based on the jar dependencies that you have added. Since spring-boot-starter-web added Tomcat and Spring MVC, the auto-configuration assumes that you are developing a web application and sets up Spring accordingly.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Starters and Auto-configuration</p></div>
<div class="paragraph"><p>Auto-configuration is designed to work well with “Starters”, but the two concepts are not directly tied. You are free to pick and choose jar dependencies outside of the starters. Spring Boot still does its best to auto-configure your application.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>The “main” Method</p></div>
<div class="paragraph"><p>The final part of our application is the main method. This is a standard method that follows the Java convention for an application entry point. Our main method delegates to Spring Boot’s SpringApplication class by calling run. SpringApplication bootstraps our application, starting Spring, which, in turn, starts the auto-configured Tomcat web server. We need to pass Example.class as an argument to the run method to tell SpringApplication which is the primary Spring component. The args array is also passed through to expose any command-line arguments.</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect4">
<h5 id="2.4.4-Running-the-Example"><a class="anchor" href="#2.4.4-Running-the-Example"></a>2.4.4 Running the Example</h5>
<div class="paragraph"><p>At this point, your application should work. Since you used the spring-boot-starter-parent POM, you have a useful run goal that you can use to start the application. Type mvn spring-boot:run from the root project directory to start the application. You should see output similar to the following:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ mvn spring-boot:run</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>.   ____          _            __ _ _</p></div>
<div class="paragraph"><p>/\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \</p></div>
<div class="paragraph"><p>( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \</p></div>
<div class="paragraph"><p>\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</p></div>
<div class="paragraph"><p>'  |____| .__|_| |_|_| |_\__, | / / / /</p></div>
<div class="paragraph"><p>=========|_|==============|___/=/_/_/_/</p></div>
<div class="paragraph"><p>:: Spring Boot ::  (v2.3.6.RELEASE)</p></div>
<div class="paragraph"><p>....... . . .</p></div>
<div class="paragraph"><p>....... . . . (log output here)</p></div>
<div class="paragraph"><p>....... . . .</p></div>
<div class="paragraph"><p>........ Started Example in 2.222 seconds (JVM running for 6.514)</p></div>
<div class="paragraph"><p>If you open a web browser to localhost:8080, you should see the following output:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Hello World!</p></div>
<div class="paragraph"><p>To gracefully exit the application, press ctrl-c.</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect4">
<h5 id="2.4.5-Creating-an-Executable-Jar"><a class="anchor" href="#2.4.5-Creating-an-Executable-Jar"></a>2.4.5 Creating an Executable Jar</h5>
<div class="paragraph"><p>We finish our example by creating a completely self-contained executable jar file that we could run in production. Executable jars (sometimes called “fat jars”) are archives containing your compiled classes along with all of the jar dependencies that your code needs to run.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Executable jars and Java</p></div>
<div class="paragraph"><p>Java does not provide a standard way to load nested jar files (jar files that are themselves contained within a jar). This can be problematic if you are looking to distribute a self-contained application.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>To solve this problem, many developers use “uber” jars. An uber jar packages all the classes from all the application’s dependencies into a single archive. The problem with this approach is that it becomes hard to see which libraries are in your application. It can also be problematic if the same filename is used (but with different content) in multiple jars.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Spring Boot takes a different approach and lets you actually nest jars directly.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>To create an executable jar, we need to add the spring-boot-maven-plugin to our pom.xml. To do so, insert the following lines just below the dependencies section:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><build></p></div>
<div class="paragraph"><p><plugins></p></div>
<div class="paragraph"><p><plugin></p></div>
<div class="paragraph"><p><groupId>org.springframework.boot</groupId></p></div>
<div class="paragraph"><p><artifactId>spring-boot-maven-plugin</artifactId></p></div>
<div class="paragraph"><p></plugin></p></div>
<div class="paragraph"><p></plugins></p></div>
<div class="paragraph"><p></build></p></div>
<div class="paragraph"><p>The spring-boot-starter-parent POM includes <executions> configuration to bind the repackage goal. If you do not use the parent POM, you need to declare this configuration yourself. See the plugin documentation for details.</p></div>
<div class="paragraph"><p>Save your pom.xml and run mvn package from the command line, as follows:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ mvn package</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>[INFO] Scanning for projects...</p></div>
<div class="paragraph"><p>[INFO]</p></div>
<div class="paragraph"><p>[INFO] ------------------------------------------------------------------------</p></div>
<div class="paragraph"><p>[INFO] Building myproject 0.0.1-SNAPSHOT</p></div>
<div class="paragraph"><p>[INFO] ------------------------------------------------------------------------</p></div>
<div class="paragraph"><p>[INFO] .... ..</p></div>
<div class="paragraph"><p>[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ myproject ---</p></div>
<div class="paragraph"><p>[INFO] Building jar: /Users/developer/example/spring-boot-example/target/myproject-0.0.1-SNAPSHOT.jar</p></div>
<div class="paragraph"><p>[INFO]</p></div>
<div class="paragraph"><p>[INFO] --- spring-boot-maven-plugin:2.3.6.RELEASE:repackage (default) @ myproject ---</p></div>
<div class="paragraph"><p>[INFO] ------------------------------------------------------------------------</p></div>
<div class="paragraph"><p>[INFO] BUILD SUCCESS</p></div>
<div class="paragraph"><p>[INFO] ------------------------------------------------------------------------</p></div>
<div class="paragraph"><p>If you look in the target directory, you should see myproject-0.0.1-SNAPSHOT.jar. The file should be around 10 MB in size. If you want to peek inside, you can use jar tvf, as follows:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ jar tvf target/myproject-0.0.1-SNAPSHOT.jar</p></div>
<div class="paragraph"><p>You should also see a much smaller file named myproject-0.0.1-SNAPSHOT.jar.original in the target directory. This is the original jar file that Maven created before it was repackaged by Spring Boot.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>To run that application, use the java -jar command, as follows:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>$ java -jar target/myproject-0.0.1-SNAPSHOT.jar</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>.   ____          _            __ _ _</p></div>
<div class="paragraph"><p>/\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \</p></div>
<div class="paragraph"><p>( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \</p></div>
<div class="paragraph"><p>\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</p></div>
<div class="paragraph"><p>'  |____| .__|_| |_|_| |_\__, | / / / /</p></div>
<div class="paragraph"><p>=========|_|==============|___/=/_/_/_/</p></div>
<div class="paragraph"><p>:: Spring Boot ::  (v2.3.6.RELEASE)</p></div>
<div class="paragraph"><p>....... . . .</p></div>
<div class="paragraph"><p>....... . . . (log output here)</p></div>
<div class="paragraph"><p>....... . . .</p></div>
<div class="paragraph"><p>........ Started Example in 2.536 seconds (JVM running for 2.864)</p></div>
<div class="paragraph"><p>As before, to exit the application, press ctrl-c.</p></div>
<div class="paragraph"><p></p></div>
</div>
</div>
<div class="sect3">
<h4 id="2.5-What-to-Read-Next"><a class="anchor" href="#2.5-What-to-Read-Next"></a>2.5 What to Read Next</h4>
<div class="paragraph"><p>Hopefully, this section provided some of the Spring Boot basics and got you on your way to writing your own applications. If you are a task-oriented type of developer, you might want to jump over to spring.io and check out some of the getting started guides that solve specific “How do I do that with Spring?” problems. We also have Spring Boot-specific “How-to” reference documentation.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Otherwise, the next logical step is to read Using Spring Boot. If you are really impatient, you could also jump ahead and read about Spring Boot features.</p></div>
<div class="paragraph"><p></p></div>
</div>
</div>
<div class="sect2">
<h3 id="3-Using-Spring-Boot"><a class="anchor" href="#3-Using-Spring-Boot"></a>3 Using Spring Boot</h3>
<div class="paragraph"><p>This section goes into more detail about how you should use Spring Boot. It covers topics such as build systems, auto-configuration, and how to run your applications. We also cover some Spring Boot best practices. Although there is nothing particularly special about Spring Boot (it is just another library that you can consume), there are a few recommendations that, when followed, make your development process a little easier.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>If you are starting out with Spring Boot, you should probably read the Getting Started guide before diving into this section.</p></div>
<div class="paragraph"><p></p></div>
<div class="sect3">
<h4 id="3.1-Build-Systems"><a class="anchor" href="#3.1-Build-Systems"></a>3.1 Build Systems</h4>
<div class="paragraph"><p>It is strongly recommended that you choose a build system that supports dependency management and that can consume artifacts published to the “Maven Central” repository. We would recommend that you choose Maven or Gradle. It is possible to get Spring Boot to work with other build systems (Ant, for example), but they are not particularly well supported.</p></div>
<div class="paragraph"><p></p></div>
<div class="sect4">
<h5 id="3.1.1-Dependency-Management"><a class="anchor" href="#3.1.1-Dependency-Management"></a>3.1.1 Dependency Management</h5>
<div class="paragraph"><p>Each release of Spring Boot provides a curated list of dependencies that it supports. In practice, you do not need to provide a version for any of these dependencies in your build configuration, as Spring Boot manages that for you. When you upgrade Spring Boot itself, these dependencies are upgraded as well in a consistent way.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>You can still specify a version and override Spring Boot’s recommendations if you need to do so.</p></div>
<div class="paragraph"><p>The curated list contains all the Spring modules that you can use with Spring Boot as well as a refined list of third party libraries. The list is available as a standard Bills of Materials (spring-boot-dependencies) that can be used with both Maven and Gradle.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Each release of Spring Boot is associated with a base version of the Spring Framework. We highly recommend that you not specify its version.</p></div>
</div>
<div class="sect4">
<h5 id="3.1.2-Maven"><a class="anchor" href="#3.1.2-Maven"></a>3.1.2 Maven</h5>
<div class="paragraph"><p>To learn about using Spring Boot with Maven, please refer to the documentation for Spring Boot’s Maven plugin:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Reference (HTML and PDF)</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>API</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect4">
<h5 id="3.1.3-Gradle"><a class="anchor" href="#3.1.3-Gradle"></a>3.1.3 Gradle</h5>
<div class="paragraph"><p>To learn about using Spring Boot with Gradle, please refer to the documentation for Spring Boot’s Gradle plugin:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>Reference (HTML and PDF)</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>API</p></div>
<div class="paragraph"><p></p></div>
</div>
<div class="sect4">
<h5 id="3.1.4-Ant"><a class="anchor" href="#3.1.4-Ant"></a>3.1.4 Ant</h5>
<div class="paragraph"><p>It is possible to build a Spring Boot project using Apache Ant+Ivy. The spring-boot-antlib “AntLib” module is also available to help Ant create executable jars.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>To declare dependencies, a typical ivy.xml file looks something like the following example:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><ivy-module version="2.0"></p></div>
<div class="paragraph"><p><info organisation="org.springframework.boot" module="spring-boot-sample-ant" /></p></div>
<div class="paragraph"><p><configurations></p></div>
<div class="paragraph"><p><conf name="compile" description="everything needed to compile this module" /></p></div>
<div class="paragraph"><p><conf name="runtime" extends="compile" description="everything needed to run this module" /></p></div>
<div class="paragraph"><p></configurations></p></div>
<div class="paragraph"><p><dependencies></p></div>
<div class="paragraph"><p><dependency org="org.springframework.boot" name="spring-boot-starter"</p></div>
<div class="paragraph"><p>rev="${spring-boot.version}" conf="compile" /></p></div>
<div class="paragraph"><p></dependencies></p></div>
<div class="paragraph"><p></ivy-module></p></div>
<div class="paragraph"><p>A typical build.xml looks like the following example:</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><project</p></div>
<div class="paragraph"><p>xmlns:ivy="antlib:org.apache.ivy.ant"</p></div>
<div class="paragraph"><p>xmlns:spring-boot="antlib:org.springframework.boot.ant"</p></div>
<div class="paragraph"><p>name="myapp" default="build"></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><property name="spring-boot.version" value="2.3.6.RELEASE" /></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><target name="resolve" description="--> retrieve dependencies with ivy"></p></div>
<div class="paragraph"><p><ivy:retrieve pattern="lib/[conf]/[artifact]-[type]-[revision].[ext]" /></p></div>
<div class="paragraph"><p></target></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><target name="classpaths" depends="resolve"></p></div>
<div class="paragraph"><p><path id="compile.classpath"></p></div>
<div class="paragraph"><p><fileset dir="lib/compile" includes="*.jar" /></p></div>
<div class="paragraph"><p></path></p></div>
<div class="paragraph"><p></target></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><target name="init" depends="classpaths"></p></div>
<div class="paragraph"><p><mkdir dir="build/classes" /></p></div>
<div class="paragraph"><p></target></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><target name="compile" depends="init" description="compile"></p></div>
<div class="paragraph"><p><javac srcdir="src/main/java" destdir="build/classes" classpathref="compile.classpath" /></p></div>
<div class="paragraph"><p></target></p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p><target name="build" depends="compile"></p></div>
<div class="paragraph"><p><spring-boot:exejar destfile="build/myapp.jar" classes="build/classes"></p></div>
<div class="paragraph"><p><spring-boot:lib></p></div>
<div class="paragraph"><p><fileset dir="lib/runtime" /></p></div>
<div class="paragraph"><p></spring-boot:lib></p></div>
<div class="paragraph"><p></spring-boot:exejar></p></div>
<div class="paragraph"><p></target></p></div>
<div class="paragraph"><p></project></p></div>
<div class="paragraph"><p>If you do not want to use the spring-boot-antlib module, see the Build an Executable Archive from Ant without Using spring-boot-antlib “How-to” .</p></div>
</div>
<div class="sect4">
<h5 id="3.1.5-Starters"><a class="anchor" href="#3.1.5-Starters"></a>3.1.5 Starters</h5>
<div class="paragraph"><p>Starters are a set of convenient dependency descriptors that you can include in your application. You get a one-stop shop for all the Spring and related technologies that you need without having to hunt through sample code and copy-paste loads of dependency descriptors. For example, if you want to get started using Spring and JPA for database access, include the spring-boot-starter-data-jpa dependency in your project.</p></div>
<div class="paragraph"><p></p></div>
<div class="paragraph"><p>The starters contain a lot of the dependencies that you need to get a project up and running quickly and with a consistent, supported set of managed transitive dependencies.</p></div>
</div>
</div>
</div>
</div>
</div>
</div><!--<div id="content">-->
<div id="footer">
    <div id="footer-text">
        Last updated 1970-01-01 00:00:00 UTC
    </div>
</div>
<div>
    <link rel="stylesheet" href="static/css/github.min.css">
    <link rel="stylesheet" href="static/css/panai-style.css">
    <link rel="stylesheet" href="static/css/swal-pub-style.css">
    <script async="" src="static/js/analytics.js"></script>
    <script src="static/js/highlight.min.js"></script>
    <script>hljs.initHighlighting()</script>
    <script type="text/javascript" src="static/js/tocbot.min.js"></script>
    <script type="text/javascript" src="static/js/toc.js"></script>
    <script>if (window.parent == window) {
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date();
            a = s.createElement(o), m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', 'static/js/analytics.js', 'ga');
        ga('create', 'UA-2728886-23', 'auto', {'siteSpeedSampleRate': 100});
        ga('send', 'pageview');
    }</script>
    <script defer="" src="static/js/beacon.min.js" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon="{&quot;rayId&quot;:&quot;8dcdf96e0a31090d&quot;,&quot;serverTiming&quot;:{&quot;name&quot;:{&quot;cfExtPri&quot;:true,&quot;cfL4&quot;:true,&quot;cfSpeedBrain&quot;:true,&quot;cfCacheStatus&quot;:true}},&quot;version&quot;:&quot;2024.10.4&quot;,&quot;token&quot;:&quot;bffcb8a918ae4755926f76178bfbd26b&quot;}" crossorigin="anonymous"></script>
</div>
</body>
</html>
<style>
    img {
        width: 70%;
        height: auto;
        display: block;
        margin: 1.5em 0;
        border: 1px solid #000;
        margin-left: auto;
        margin-right: auto;
    }
</style>
